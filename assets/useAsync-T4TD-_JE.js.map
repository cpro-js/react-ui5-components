{"version":3,"file":"useAsync-T4TD-_JE.js","sources":["../../src/component/autocomplete/hooks/useAsync.ts"],"sourcesContent":["import { useDebounceCallback } from \"@react-hook/debounce\";\nimport { InputDomRef, Ui5CustomEvent } from \"@ui5/webcomponents-react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { useLatestRef } from \"../../../hook/useLatestRef\";\nimport { DEBOUNCE_RATE } from \"../../common/CommonSelection\";\nimport { CoreAutocompleteProps } from \"../internal/CoreAutocomplete\";\n\nexport type UseAsyncManagedPropKeys = keyof Pick<\n  CoreAutocompleteProps,\n  \"items\" | \"filterItem\"\n>;\n\ntype UseAsyncUsedPropKeys = keyof Pick<\n  CoreAutocompleteProps,\n  \"onInputChange\" | \"onValueChange\" | \"getItemLabel\"\n>;\n\nexport type UseAsyncAdditionalProps<TItemModel extends {}> = {\n  /**\n   * Minimum number of characters before search is triggered.\n   * Default: 1.\n   */\n  minCharsForSearch?: number;\n\n  /**\n   * The search method to use in order to generate items.\n   * This method is fired on every key press.\n   *\n   * @param searchTerm the entered value\n   * @returns Promise of the items to use for showing items\n   */\n  loadItems: (searchTerm: string) => Promise<Array<TItemModel>>;\n\n  /**\n   * Initial items matching the initial value\n   */\n  initialItems?: Array<TItemModel>;\n};\n\ntype UseAsyncAdditionalPropKeys = keyof UseAsyncAdditionalProps<{}>;\n\nexport type UseAsyncProps<\n  TItemModel extends {},\n  TAdditionalProps extends Pick<\n    CoreAutocompleteProps<TItemModel>,\n    UseAsyncUsedPropKeys\n  >\n> = Omit<TAdditionalProps, UseAsyncManagedPropKeys> &\n  UseAsyncAdditionalProps<TItemModel>;\n\nexport type UseAsyncPropsReturn<\n  TItemModel extends {},\n  TAdditionalProps extends Pick<\n    CoreAutocompleteProps<TItemModel>,\n    UseAsyncUsedPropKeys\n  >\n> = Omit<TAdditionalProps, UseAsyncAdditionalPropKeys> &\n  Required<Pick<CoreAutocompleteProps<TItemModel>, UseAsyncManagedPropKeys>>;\n\nexport const useAsync = <\n  TItemModel,\n  TAdditionalProps extends Pick<\n    CoreAutocompleteProps<TItemModel>,\n    UseAsyncUsedPropKeys\n  >\n>(\n  props: UseAsyncProps<TItemModel, TAdditionalProps>\n): UseAsyncPropsReturn<TItemModel, TAdditionalProps> => {\n  const { minCharsForSearch, loadItems, initialItems, ...restProps } = props;\n  const {\n    onInputChange: propsOnInputChange,\n    getItemLabel: propsGetItemLabel,\n    onValueChange: propsOnValueChange,\n  } = restProps;\n\n  const [loadedOptions, setLoadedOptions] = useState<Array<TItemModel>>(\n    initialItems ?? []\n  );\n\n  const lastRequest = useRef<unknown>(undefined);\n  const mounted = useRef<boolean>(false);\n  const lastItemSelection = useRef<TItemModel | undefined>();\n  const latestGetItemLabel = useLatestRef(propsGetItemLabel);\n\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  const handleInputValueChangeDebounced = useDebounceCallback(\n    (inputValue: string) => {\n      if (\n        !inputValue ||\n        (minCharsForSearch != null && inputValue.length < minCharsForSearch)\n      ) {\n        lastRequest.current = undefined;\n        setLoadedOptions([]);\n        return;\n      }\n\n      // there is one case where we shouldn't search, after a selection has been made.\n      // First a search is not necessary, second it can be harmful: The label which is put\n      // into the input field after selection, doesn't need to be a proper & matching search term\n      // => only search if the search term doesn't match the label of the current value\n      const hasBeenSelected =\n        lastItemSelection.current != null &&\n        inputValue === latestGetItemLabel.current(lastItemSelection.current);\n\n      if (hasBeenSelected) {\n        return;\n      }\n\n      const request = (lastRequest.current = {});\n\n      loadItems(inputValue).then((options) => {\n        if (!mounted) {\n          return;\n        }\n        if (request !== lastRequest.current) {\n          return;\n        }\n        lastRequest.current = undefined;\n        setLoadedOptions(options || []);\n      });\n    },\n    DEBOUNCE_RATE\n  );\n\n  const onInputChange = useCallback(\n    (inputValue: string, event: Ui5CustomEvent<InputDomRef>) => {\n      if (propsOnInputChange != null) {\n        propsOnInputChange(inputValue, event);\n      }\n\n      handleInputValueChangeDebounced(inputValue);\n    },\n    [propsOnInputChange, handleInputValueChangeDebounced]\n  );\n\n  const onValueChange = useCallback(\n    (value?: string, item?: TItemModel) => {\n      lastItemSelection.current = item;\n\n      if (propsOnValueChange != null) {\n        propsOnValueChange(value, item);\n      }\n    },\n    [propsOnValueChange]\n  );\n\n  // @ts-ignore TODO what's wrong here?\n  return {\n    ...restProps,\n    onInputChange,\n    onValueChange,\n    items: loadedOptions,\n    filterItem: null,\n  };\n};\n"],"names":["useAsync","props","minCharsForSearch","loadItems","initialItems","restProps","propsOnInputChange","propsGetItemLabel","propsOnValueChange","loadedOptions","setLoadedOptions","useState","lastRequest","useRef","mounted","lastItemSelection","latestGetItemLabel","useLatestRef","useEffect","handleInputValueChangeDebounced","useDebounceCallback","inputValue","request","options","DEBOUNCE_RATE","onInputChange","useCallback","event","onValueChange","value","item"],"mappings":"gLA4Da,MAAAA,EAOXC,GACsD,CACtD,KAAM,CAAE,kBAAAC,EAAmB,UAAAC,EAAW,aAAAC,EAAc,GAAGC,CAAc,EAAAJ,EAC/D,CACJ,cAAeK,EACf,aAAcC,EACd,cAAeC,CACb,EAAAH,EAEE,CAACI,EAAeC,CAAgB,EAAIC,EAAA,SACxCP,GAAgB,CAAC,CAAA,EAGbQ,EAAcC,EAAAA,OAAgB,MAAS,EACvCC,EAAUD,SAAgB,EAAK,EAC/BE,EAAoBF,EAAAA,SACpBG,EAAqBC,EAAaV,CAAiB,EAEzDW,EAAAA,UAAU,KACRJ,EAAQ,QAAU,GACX,IAAM,CACXA,EAAQ,QAAU,EAAA,GAEnB,CAAE,CAAA,EAEL,MAAMK,EAAkCC,EACrCC,GAAuB,CACtB,GACE,CAACA,GACAnB,GAAqB,MAAQmB,EAAW,OAASnB,EAClD,CACAU,EAAY,QAAU,OACtBF,EAAiB,CAAE,CAAA,EACnB,MACF,CAUA,GAHEK,EAAkB,SAAW,MAC7BM,IAAeL,EAAmB,QAAQD,EAAkB,OAAO,EAGnE,OAGI,MAAAO,EAAWV,EAAY,QAAU,GAEvCT,EAAUkB,CAAU,EAAE,KAAME,GAAY,CACjCT,GAGDQ,IAAYV,EAAY,UAG5BA,EAAY,QAAU,OACLF,EAAAa,GAAW,CAAA,CAAE,EAAA,CAC/B,CACH,EACAC,CAAA,EAGIC,EAAgBC,EAAA,YACpB,CAACL,EAAoBM,IAAuC,CACtDrB,GAAsB,MACxBA,EAAmBe,EAAYM,CAAK,EAGtCR,EAAgCE,CAAU,CAC5C,EACA,CAACf,EAAoBa,CAA+B,CAAA,EAGhDS,EAAgBF,EAAA,YACpB,CAACG,EAAgBC,IAAsB,CACrCf,EAAkB,QAAUe,EAExBtB,GAAsB,MACxBA,EAAmBqB,EAAOC,CAAI,CAElC,EACA,CAACtB,CAAkB,CAAA,EAId,MAAA,CACL,GAAGH,EACH,cAAAoB,EACA,cAAAG,EACA,MAAOnB,EACP,WAAY,IAAA,CAEhB"}