{"version":3,"file":"Button-NwTvRcXl.js","sources":["../../src/component/Button.tsx"],"sourcesContent":["import {\n  ButtonDomRef,\n  ButtonPropTypes,\n  Button as UI5Button,\n} from \"@ui5/webcomponents-react\";\nimport { FC, MouseEvent, useCallback } from \"react\";\n\nimport { triggerReset, triggerSubmit } from \"./util\";\n\nexport interface ButtonProps extends Omit<ButtonPropTypes, \"submits\" | \"type\"> {\n  form?: string;\n  type?: \"button\" | \"submit\" | \"reset\";\n}\n\nexport const Button: FC<ButtonProps> = ({ form, type, onClick, ...others }) => {\n  const handleClick = useCallback(\n    (event: MouseEvent<ButtonDomRef>) => {\n      if (onClick != null) {\n        onClick(event);\n      }\n\n      // submit/reset when not prevented\n      if (!event.defaultPrevented) {\n        if (type === \"submit\") {\n          triggerSubmit(event, form);\n        } else if (type === \"reset\") {\n          triggerReset(event, form);\n        }\n      }\n    },\n    [type, form, onClick]\n  );\n  return <UI5Button {...others} onClick={handleClick} />;\n};\n"],"names":["Button","form","type","onClick","others","handleClick","useCallback","event","triggerSubmit","triggerReset","jsx","UI5Button"],"mappings":"0LAcO,MAAAA,EAAA,CAAA,CAAA,KAAAC,EAAA,KAAAC,EAAA,QAAAC,EAAA,GAAAC,KAAA,CACL,MAAAC,EAAAC,EAAA,YAAoBC,GAAA,CAEhBJ,GAAA,MACEA,EAAAI,CAAA,EAIFA,EAAA,mBACEL,IAAA,SACEM,EAAAD,EAAAN,CAAA,EAAyBC,IAAA,SAEzBO,EAAAF,EAAAN,CAAA,EAEJ,EACF,CAAAC,EAAAD,EAAAE,CAAA,CACoB,EAEtB,OAAAO,EAAAC,EAAA,CAAA,GAAAP,EAAA,QAAAC,CAAA,CAAA,CACF"}