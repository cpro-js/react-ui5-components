{"version":3,"file":"DatePicker-KKAI-CxL.js","sources":["../../../../node_modules/@ui5/webcomponents-react/dist/webComponents/DatePicker/index.js","../../src/component/DatePicker.tsx"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/DatePicker.js';\nimport { ValueState } from '../../enums/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\n/**\n * The `DatePicker` component provides an input field with assigned calendar which opens on user action. The `DatePicker` allows users to select a localized date using touch, mouse, or keyboard input. It consists of two parts: the date input field and the date picker.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Componentsâ€™ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-DatePicker)\n */\nconst DatePicker = withWebComponent('ui5-date-picker', ['accessibleName', 'accessibleNameRef', 'name', 'placeholder', 'value', 'valueState', 'formatPattern', 'maxDate', 'minDate', 'primaryCalendarType', 'secondaryCalendarType'], ['disabled', 'hideWeekNumbers', 'readonly', 'required'], ['valueStateMessage'], ['change', 'input']);\nDatePicker.displayName = 'DatePicker';\nDatePicker.defaultProps = {\n  valueState: ValueState.None\n};\nexport { DatePicker };","import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";\n\nimport { DatePicker as UI5DatePicker } from \"@ui5/webcomponents-react\";\nimport { Ui5CustomEvent } from \"@ui5/webcomponents-react\";\nimport {\n  DatePickerDomRef,\n  DatePickerPropTypes,\n} from \"@ui5/webcomponents-react\";\nimport clsx from \"clsx\";\nimport {\n  FC,\n  KeyboardEvent,\n  forwardRef,\n  useCallback,\n  useContext,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { createUseStyles } from \"react-jss\";\n\nimport { FormAdapterContext } from \"../form/FormAdapter\";\nimport { useWaitForWebcomponent } from \"../hook/useWaitForWebcomponent\";\nimport { triggerSubmitOnEnter } from \"./util\";\n\nconst useStyles = createUseStyles({\n  fixWidth: {\n    minWidth: \"var(--_ui5_input_width)\",\n    width: \"var(--_ui5_input_width)\",\n  },\n});\n\nconst convertToDate = (\n  value: Date | any,\n  parse: (value: any) => Date | null\n): Date | null => {\n  return value == null ? null : value instanceof Date ? value : parse(value);\n};\n\n/**\n * Simplified interface for DateFormat\n * see https://sapui5.hana.ondemand.com/sdk/#/api/sap.ui.core.format.DateFormat%23methods/sap.ui.core.format.DateFormat.getTimeInstance\n */\ninterface SapCoreDateFormat {\n  /**\n   * Formats date in the desired format (already set). Invalid returns empty string.\n   * @param date\n   */\n  formatToUiString: (date: Date) => string;\n}\n\nexport interface DatePickerProps<TDate extends Date | string | number = string>\n  extends Omit<\n    DatePickerPropTypes,\n    \"value\" | \"minDate\" | \"maxDate\" | \"onChange\"\n  > {\n  value?: Date | TDate;\n  minDate?: Date | TDate;\n  maxDate?: Date | TDate;\n  onChange?: (\n    event: Ui5CustomEvent<DatePickerDomRef, { valid: boolean; value: string }>,\n    value: TDate | null\n  ) => void;\n}\n\nexport const DatePicker = forwardRef<\n  DatePickerDomRef | undefined,\n  DatePickerProps\n>(\n  (\n    {\n      className,\n      value,\n      minDate,\n      maxDate,\n      onChange,\n      onKeyDown,\n      onKeyPress,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    const classes = useStyles();\n    const ref = useRef<DatePickerDomRef>();\n\n    // forward our internal ref as external\n    useImperativeHandle(forwardedRef, () => ref.current);\n\n    const {\n      date: { format, parse },\n    } = useContext(FormAdapterContext);\n\n    const ui5Loaded = useWaitForWebcomponent(\"ui5-date-picker\");\n\n    // Workaround: API of UI5 Datepicker supports only user formatted date strings as input and output\n    // that's why we need to transform our used date objects to string and vice versa with their API\n    const [isRefSet, setIsRefSet] = useState(false);\n\n    const setRef = useCallback((ui5DatePicker: null | DatePickerDomRef) => {\n      if (ui5DatePicker == null) {\n        ref.current = undefined;\n        return;\n      }\n      ref.current = ui5DatePicker;\n\n      setIsRefSet(true);\n    }, []);\n\n    const handleKeyDown = useCallback(\n      (event: KeyboardEvent<HTMLElement>) => {\n        // Fix: As long as the user is typing within the input ensure that no one else can catch these events\n        // Background: Storybook is catching these events and triggering their shortcuts\n        event.stopPropagation();\n        if (onKeyDown != null) {\n          onKeyDown(event);\n        }\n      },\n      [onKeyDown]\n    );\n\n    const handleChange = useCallback(\n      (\n        event: Ui5CustomEvent<\n          DatePickerDomRef,\n          { value: string; valid: boolean }\n        >\n      ) => {\n        if (!ui5Loaded) {\n          return;\n        }\n        if (onChange != null) {\n          const value: Date | undefined | null = event.target.dateValue;\n          const formattedValue = event.detail.value;\n\n          const normalizedValue =\n            value == null || !formattedValue ? null : (format(value) as any);\n          onChange(event, normalizedValue);\n        }\n      },\n      [onChange, ui5Loaded, format]\n    );\n\n    const handleKeyPress = useCallback(\n      (event: KeyboardEvent<HTMLElement>) => {\n        // Workaround: Webcomponents catches enter -> need to submit manually\n        // see https://github.com/SAP/ui5-webcomponents/pull/2855/files\n        triggerSubmitOnEnter(event);\n        if (onKeyPress != null) {\n          onKeyPress(event);\n        }\n      },\n      [onKeyPress]\n    );\n\n    const finalValues = useMemo(() => {\n      // @ts-ignore\n      const formatToUiString = ref.current?.formatValue?.bind(ref.current);\n      if (!ui5Loaded || !formatToUiString) {\n        return { value: \"\" };\n      }\n\n      const normalizedValue = convertToDate(value, parse);\n      const normalizedMinDate = convertToDate(minDate, parse);\n      const normalizedMaxDate = convertToDate(maxDate, parse);\n      return {\n        value: normalizedValue ? formatToUiString(normalizedValue) : \"\",\n        minDate: normalizedMinDate\n          ? formatToUiString(normalizedMinDate)\n          : undefined,\n        maxDate: normalizedMaxDate\n          ? formatToUiString(normalizedMaxDate)\n          : undefined,\n      };\n    }, [ui5Loaded, isRefSet, value, minDate, maxDate]);\n\n    return (\n      <UI5DatePicker\n        {...props}\n        className={clsx(className, classes.fixWidth)}\n        ref={setRef}\n        value={finalValues.value}\n        minDate={finalValues.minDate}\n        maxDate={finalValues.maxDate}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onKeyPress={handleKeyPress}\n      />\n    );\n  }\n);\n"],"names":["DatePicker","withWebComponent","ValueState","useStyles","createUseStyles","convertToDate","value","parse","forwardRef","className","minDate","maxDate","onChange","onKeyDown","onKeyPress","props","forwardedRef","classes","ref","useRef","useImperativeHandle","format","useContext","FormAdapterContext","ui5Loaded","useWaitForWebcomponent","isRefSet","setIsRefSet","useState","setRef","useCallback","ui5DatePicker","handleKeyDown","event","handleChange","value2","formattedValue","normalizedValue","handleKeyPress","triggerSubmitOnEnter","finalValues","useMemo","formatToUiString","_b","_a","normalizedMinDate","normalizedMaxDate","jsx","UI5DatePicker","clsx"],"mappings":"wWAYA,MAAMA,EAAaC,EAAiB,kBAAmB,CAAC,iBAAkB,oBAAqB,OAAQ,cAAe,QAAS,aAAc,gBAAiB,UAAW,UAAW,sBAAuB,uBAAuB,EAAG,CAAC,WAAY,kBAAmB,WAAY,UAAU,EAAG,CAAC,mBAAmB,EAAG,CAAC,SAAU,OAAO,CAAC,EACxUD,EAAW,YAAc,aACzBA,EAAW,aAAe,CACxB,WAAYE,EAAW,IACzB,ECUA,MAAAC,EAAAC,EAAA,CAAkC,SAAA,CACtB,SAAA,0BACE,MAAA,yBACH,CAEX,CAAA,EAEAC,EAAA,CAAAC,EAAAC,IAIED,GAAA,KAAA,KAAAA,aAAA,KAAAA,EAAAC,EAAAD,CAAA,EA6BKN,EAAAQ,EAAA,WAAmB,CAAA,CAKtB,UAAAC,EACE,MAAAH,EACA,QAAAI,EACA,QAAAC,EACA,SAAAC,EACA,UAAAC,EACA,WAAAC,EACA,GAAAC,CACG,EAAAC,IAAA,CAIL,MAAAC,EAAAd,IACAe,EAAAC,EAAAA,SAGAC,EAAAA,oBAAAJ,EAAA,IAAAE,EAAA,OAAA,EAEA,KAAA,CAAM,KAAA,CAAA,OAAAG,EAAA,MAAAd,CAAA,CACkB,EAAAe,EAAAA,WAAAC,CAAA,EAGxBC,EAAAC,EAAA,iBAAA,EAIA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,EAAAC,cAAAC,GAAA,CACE,GAAAA,GAAA,KAAA,CACEb,EAAA,QAAA,OACA,MAAA,CAEFA,EAAA,QAAAa,EAEAJ,EAAA,EAAA,CAAgB,EAAA,CAAA,CAAA,EAGlBK,EAAAF,EAAA,YAAsBG,GAAA,CAIlBA,EAAA,gBAAA,EACApB,GAAA,MACEA,EAAAoB,CAAA,CACF,EACF,CAAApB,CAAA,CACU,EAGZqB,EAAAJ,EAAA,YAAqBG,GAAA,CAOjB,GAAAT,GAGAZ,GAAA,KAAA,CACE,MAAAuB,EAAAF,EAAA,OAAA,UACAG,EAAAH,EAAA,OAAA,MAEAI,EAAAF,GAAA,MAAA,CAAAC,EAAA,KAAAf,EAAAc,CAAA,EAEAvB,EAAAqB,EAAAI,CAAA,CAA+B,CACjC,EACF,CAAAzB,EAAAY,EAAAH,CAAA,CAC4B,EAG9BiB,EAAAR,EAAA,YAAuBG,GAAA,CAInBM,EAAAN,CAAA,EACAnB,GAAA,MACEA,EAAAmB,CAAA,CACF,EACF,CAAAnB,CAAA,CACW,EAGb0B,EAAAC,EAAAA,QAAA,IAAA,SAEE,MAAAC,GAAAC,GAAAC,EAAA1B,EAAA,UAAA,YAAA0B,EAAA,cAAA,YAAAD,EAAA,KAAAzB,EAAA,SACA,GAAA,CAAAM,GAAA,CAAAkB,EACE,MAAA,CAAA,MAAA,IAGF,MAAAL,EAAAhC,EAAAC,EAAAC,CAAA,EACAsC,EAAAxC,EAAAK,EAAAH,CAAA,EACAuC,EAAAzC,EAAAM,EAAAJ,CAAA,EACA,MAAA,CAAO,MAAA8B,EAAAK,EAAAL,CAAA,EAAA,GACwD,QAAAQ,EAAAH,EAAAG,CAAA,EAAA,OAGzD,QAAAC,EAAAJ,EAAAI,CAAA,EAAA,MAGA,CACN,EAAA,CAAAtB,EAAAE,EAAApB,EAAAI,EAAAC,CAAA,CAAA,EAGF,OAAAoC,EACEC,EAAC,CAAA,GAAAjC,EACK,UAAAkC,EAAAxC,EAAAQ,EAAA,QAAA,EACuC,IAAAY,EACtC,MAAAW,EAAA,MACc,QAAAA,EAAA,QACE,QAAAA,EAAA,QACA,SAAAN,EACX,UAAAF,EACC,WAAAM,CACC,CAAA,CACd,CAGN","x_google_ignoreList":[0]}